services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: rust-api-mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: rust_api
      MYSQL_USER: apiuser
      MYSQL_PASSWORD: apipassword
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$$MYSQL_ROOT_PASSWORD",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: rust-api-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Optional: RabbitMQ for messaging
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rust-api-rabbitmq
    ports:
      - "5672:5672" # AMQP protocol
      - "15672:15672" # Management interface
    environment:
      RABBITMQ_DEFAULT_USER: apiuser
      RABBITMQ_DEFAULT_PASS: apipassword
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
